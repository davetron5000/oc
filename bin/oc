#!/usr/bin/env ruby

require 'methadone'
require 'oc'
require 'json'

class App
  include Methadone::Main
  include Methadone::CLILogging

  main do |org_file|
    puts options.inspect
    people = Oc::People.from_json(File.read(options[:people] || "people.json"))
    org    = Oc::OrgStructure.from_json(File.read(org_file))

    reporting_structure = Oc::ReportingStructure.new(org)

    out = STDOUT
    dot = Oc::DOT::Grapher.new(out)

    dot.digraph(File.basename(org_file,".json")) do
      dot.graph_config(nodesep: "1.0",
                       node: { shape: :record })
      org.divisions do |division|
        dot.subgraph(division.id,division.name, render_if: division.multiple_teams?) do
          division.teams do |team|
            dot.subgraph(team.id,team.name) do
              team.org do |name,reports|
                reports.each do |report|
                  dot.node(report)
                end
                dot.node(name)
              end
            end
          end
        end
      end
      reporting_structure.each do |manager,reports|
        dot.node(manager,nodes_pointed_at: reports)
      end
      people.people do |person|
        dot.mrecord(person.id,[person.name,person.title])
      end
    end
  end

  arg :org_structure_json

  version Oc::VERSION

  description "Produces an org chart based on your team"
  on("--people PEOPLE_FILE","JSON file containing data about your people (default ./people.json)")

  leak_exceptions true

  go!
end
